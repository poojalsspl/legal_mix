<?php
namespace frontend\controllers;


use frontend\models\AdvSearch;
use Yii;
use yii\base\InvalidParamException;
use yii\web\BadRequestHttpException;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\LoginForm;
use frontend\models\PasswordResetRequestForm;
use frontend\models\ResetPasswordForm;
use frontend\models\SignupForm;
use frontend\models\ContactForm;
use frontend\models\PlanMaster;
use app\models\UserMast;
use yii\web\UploadedFile;
use backend\models\CountryMast;
use backend\models\StateMast;
use backend\models\CityMast;
use backend\models\JudgmentMast;
use yii\helpers\Html;
use yii\helpers\Url;
use yii\rbac\DbManager;
use frontend\models\ChangePasswordForm;
use app\models\JudgeCourtCount;
use app\models\UserPlan;
use common\models\JudgmentMastSphinxSearch;
use frontend\models\JudgmentActCount;





/**
 * Site controller
 */
class SiteController extends Controller
{
    /**
     * @inheritdoc
     */
  
     public function actionJudgmentdetail()
     {

        $judgment_code = $_GET['judgment_code'];  
        $this->layout = 'InnerPage';
        
        $model = JudgmentMast::findOne($judgment_code);
        //print_r($model);die;
         return $this->render('judgmentdetail', [
        'model' => $model,
      ]);
   
    }

    public function actionPlanform()
    {
        $this->layout = 'sidebar';
        //$userplan = new \app\models\UserPlan();
        $username = \Yii::$app->user->identity->username;
        $connection = Yii::$app->getDb();
        $command = $connection->createCommand("SELECT plan,expiry_date from user_plan where username= :username and expiry_date >= NOW()", [':username' => $username ]);

        $sel_plan = $command->queryAll();
       //  echo "<pre>";print_r($sel_plan) ; exit;       
        if($sel_plan){
        return $this->render('planview', [
            'model' => $sel_plan,
            ]);
        }
        $model = new \app\models\PlanMaster();
        $authItems = $model->find()->where(['plan_type' => 'I'])->all();
        $fullaccess = $model->find()->where(['plan' => 'Full access'])->all();
        $corpaccess = $model->find()->where(['plan' => 'Corporate full access'])->all();
       if($_POST){
         //  print_r($_POST);exit;
        if(!empty($_POST['plan'])){
    
        if(is_array($_POST['plan'])){

        foreach($_POST['plan'] as $key => $value){
           // echo $value." ".$key."</br>";
           if(isset( $_POST['duration'])){
           $duration = $_POST['duration'];
           
           $expiry_date = date('Y-m-d', strtotime("+$duration month"));
           $username = \Yii::$app->user->identity->username;
           
           $userplan = new \app\models\UserPlan();
           $userplan->username= $username;   
           $userplan->plan= $value; 
           $userplan->tenure= $duration; 
           $userplan->start_date= date('Y-m-d');  
           $userplan->expiry_date= $expiry_date ; 

           if(isset($_POST['ip'])){
                $ip = $_POST['ip'];
                $userplan->corporate_ip= $ip ; 
           }
           $userplan->validate();
         
           $exists = UserPlan::find()->where( [ 'username' => $username,'plan' => $value ] )->exists();

            if($exists) {
                //it exists
                //echo "Plan already exists";
                \Yii::$app->db->createCommand("UPDATE user_plan SET tenure=:tenure, expiry_date=:expiry_date WHERE username=:username and plan=:plan")
                    ->bindValue(':username', $username)
                    ->bindValue(':plan', $value)
                    ->bindValue(':tenure', $duration)
                    ->bindValue(':expiry_date', $expiry_date)
                    ->execute();
            } else {
                  //doesn't exist so create record
                   $userplan->save(false); 
            }
            Yii::$app->session->setFlash('success', "User Plan updated.");
           }
        }
        } 
        }
         //exit;
        }
     
        return $this->render('planform', [
         'model' => $model,
         'authItems' => $authItems,
         'fullaccess' => $fullaccess,
         'corpaccess' => $corpaccess,
        ]);
    }
   

    public function actionEditplan()
    {
        $this->layout = 'InnerPage';
        //$userplan = new \app\models\UserPlan();
        $username = \Yii::$app->user->identity->username;
      
        $model = new \app\models\PlanMaster();
        $authItems = $model->find()->where(['plan_type' => 'I'])->all();
        $fullaccess = $model->find()->where(['plan' => 'Full access'])->all();
        $corpaccess = $model->find()->where(['plan' => 'Corporate full access'])->all();
       if($_POST){
         //  print_r($_POST);exit;
        if(!empty($_POST['plan'])){
    
        if(is_array($_POST['plan'])){

        foreach($_POST['plan'] as $key => $value){
           // echo $value." ".$key."</br>";
           if(isset( $_POST['duration'])){
           $duration = $_POST['duration'];
           
           $expiry_date = date('Y-m-d', strtotime("+$duration month"));
           $username = \Yii::$app->user->identity->username;
           
           $userplan = new \app\models\UserPlan();
           $userplan->username= $username;   
           $userplan->plan= $value; 
           $userplan->tenure= $duration; 
           $userplan->start_date= date('Y-m-d');  
           $userplan->expiry_date= $expiry_date ; 

           if(isset($_POST['ip'])){
                $ip = $_POST['ip'];
                $userplan->corporate_ip= $ip ; 
           }
           $userplan->validate();
         
           $exists = UserPlan::find()->where( [ 'username' => $username,'plan' => $value ] )->exists();

            if($exists) {
                //it exists
                //echo "Plan already exists";
                \Yii::$app->db->createCommand("UPDATE user_plan SET tenure=:tenure, expiry_date=:expiry_date WHERE username=:username and plan=:plan")
                    ->bindValue(':username', $username)
                    ->bindValue(':plan', $value)
                    ->bindValue(':tenure', $duration)
                    ->bindValue(':expiry_date', $expiry_date)
                    ->execute();
            } else {
                  //doesn't exist so create record
                   $userplan->save(false); 
            }

           
            Yii::$app->session->setFlash('success', "User Plan updated.");
           }
        }
        } 
        }
         //exit;
        }
     
        return $this->render('planform', [
         'model' => $model,
         'authItems' => $authItems,
         'fullaccess' => $fullaccess,
         'corpaccess' => $corpaccess,
        ]);
    }

    // To get the Year wise judgement list
     public function actionJlist()
     {
           $this->layout = 'sidebar';
           $court_name = urldecode($_GET['court_name']); 
           $userplan = new \app\models\UserPlan();
           $username = \Yii::$app->user->identity->username;

           $JudgeCourtCount = new \app\models\JudgeCourtCount();
           $courtCode = $JudgeCourtCount->getCourtCode($court_name);
           //echo $courtCode->court_code;
           //exit;
           $expDate = $userplan->getPermissions($court_name,$username);
           if($expDate){
           //echo "testing"; exit;
           $model = new JudgmentMast();
           $Jmast = $model->getJudgmentByYear($courtCode);
             //echo "<pre>"; print_r($Jmast);
             // exit; 
           return $this->render('jyearlist', [
              'jmast' => $Jmast,
           ]);
           } else {
              
               Yii::$app->session->setFlash('error', 'You are not authorize to access this page, please upgrade your plan to view the judgement list!');
                return $this->render('message');
        }
    }

    

    // To get the Year wise judgement list
     public function actionJudgmentlist()
     {

        $jyear = $_GET['jyear'];  
        $court_code = $_GET['court_code'];       
        $this->layout = 'sidebar';
        $model = new JudgmentMast();

        $Jmast = $model->getJudgmentList($court_code,$jyear);
        //echo "<pre>"; print_r($Jmast);
        // exit; 
        return $this->render('judgmentlist', [
        'jmast' => $Jmast,
      ]);
   
    }

    public function actionSubcat() {
    $out = [];
    $statemodel = new StateMast();
    if (isset($_POST['depdrop_parents'])) {
        $parents = $_POST['depdrop_parents'];
        if ($parents != null) {
            $cat_id = $parents[0];
            $out =  $statemodel->getSubCatList($cat_id); 
                   return \yii\helpers\Json::encode(['output'=>$out, 'selected'=>'']);
        }
    }

    echo \yii\helpers\Json::encode(['output'=>'', 'selected'=>'']);

}

 // To get the city Id and name

    public function actionGetcity() {
    $out = [];
    $model = new CityMast();
    if (isset($_POST['depdrop_parents'])) {
        $parents = $_POST['depdrop_parents'];

        if ($parents != null) {

            $cat_id = $parents[0];

            $out =  $model->getCityList($cat_id); 
                   return \yii\helpers\Json::encode(['output'=>$out, 'selected'=>'']);
        }

    }

    echo \yii\helpers\Json::encode(['output'=>'', 'selected'=>'']);

}
    public function behaviors()
    {
        return [
          'access' => [
                'class' => AccessControl::className(),
                'only' => ['step2','logout','dashboard','change-password'],
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['@'],
                    ],
                   
                ],
            ],
           
        ];
    }
    /**
     * @inheritdoc
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
            'captcha' => [
                'class' => 'yii\captcha\CaptchaAction',
                'fixedVerifyCode' => YII_ENV_TEST ? 'test1' : null,
            ],
        ];
    }
    /**
     * Displays homepage.
     *
     * @return mixed
     */
    public function actionDynamiccities()
    {
        $data=Location::model()->findAll('parent_id=:parent_id', 
        array(':parent_id'=>(int) $_POST['country_id']));
        $data=CHtml::listData($data,'id','name');
        foreach($data as $value=>$name)
        {
            echo CHtml::tag('option',
                array('value'=>$value),CHtml::encode($name),true);
        }
    }

   public function actionIndex()
    {
        $this->layout = 'landing';
         $model = new SignupForm();
        $usermodel = new UserMast();
        if ($model->load(Yii::$app->request->post())) {
                //$username      = $_POST['SignupForm']['first_name'];
                $email         = $_POST['SignupForm']['email'];
                $mobile_number = $_POST['SignupForm']['mobile_number'];
            if ($user = $model->signup()) {
                    $id                   = $user->id;
                    $usermodel->id    = $id;
                    //$usermodel->username  = $username;
                    $usermodel->email     = $email;
                    $usermodel->mobile_1  = $mobile_number;
                    $usermodel->sign_date = date('Y-m-d h:i:s');
                    $usermodel->status    = 0;
                    $usermodel->save(false);
                    //$username = 'User';
                    $this->sendMail($email);
                    return $this->render('signupsuccess'); 
            }
        }
        return $this->render('index', [
            'model' => $model,
        ]);
        //return $this->render('index');
    }
    /**
     * Logs in a user.

    *
     * @return mixed
     */
    public function actionLogin()
    {

        if (!Yii::$app->user->isGuest) {
            return $this->redirect(['site/dashboard']);
        }
       
        $model = new LoginForm();
        if ($model->load(Yii::$app->request->post()) && $model->login()) {
             $usermodel = new UserMast();
             $userdata = UserMast::find()->where(['id'=>Yii::$app->user->id])->one();
             if($userdata->status == '1')
             {
               
               return $this->redirect(['site/step2']);

             } else if($userdata->status == '2'){
               
               return $this->redirect(['site/dashboard']);
             } else if($userdata->status == '0'){

                     Yii::$app->user->logout();
                    // Yii::$app->session->clear();
                
                
                 return $this->render('signuperror'); 
             }
        } else {
            return $this->render('login', [
                'model' => $model,
            ]);
        }
    }
    /**
     * Logs out the current user.
     *

     * @return mixed
     */
    public function actionLogout()
    {
        Yii::$app->user->logout();
         return $this->goHome();
    }
    /**
     * Displays contact page.
     *
     * @return mixed
     */
    public function actionContact()
    {
        $this->layout = 'InnerPage';
        $model = new ContactForm();
        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            if ($model->sendEmail(Yii::$app->params['adminEmail'])) {
                Yii::$app->session->setFlash('success', 'Thank you for contacting us. We will respond to you as soon as possible.');
            } else {
                Yii::$app->session->setFlash('error', 'There was an error sending your message.');
            }
            return $this->refresh();
        } else {
            return $this->render('contact', [
                'model' => $model,
            ]);
        }
    }
    /**
     * Displays about page.
     *

     * @return mixed
     */
    public function actionAbout()
    {
       $this->layout = 'InnerPage';
       return $this->render('about');
    }
    /**
     * Signs user up.
     *

     * @return mixed
     */
    public function actionSignup()
    {
        $model = new SignupForm();
        $usermodel = new UserMast();
        if ($model->load(Yii::$app->request->post())) {
                //$username      = $_POST['SignupForm']['first_name'];
                $email         = $_POST['SignupForm']['email'];
                $mobile_number = $_POST['SignupForm']['mobile_number'];
            if ($user = $model->signup()) {
                    $id                   = $user->id;
                    $usermodel->id    = $id;
                    //$usermodel->username  = $username;
                    $usermodel->email     = $email;
                    $usermodel->mobile_1  = $mobile_number;
                    $usermodel->sign_date = date('Y-m-d h:i:s');
                    $usermodel->status    = 0;
                    $usermodel->save(false);
                    //$username = 'User';
                    $this->sendMail($email);
                     
                   
                    return $this->render('signupsuccess'); 
            }
        }
        return $this->render('signup', [
            'model' => $model,
        ]);
    }
     public function actionDashboard()
     {
         $this->layout = 'InnerPage';

         $id = Yii::$app->user->identity->id;
         $model = UserMast::findOne($id);
         if($model->status == '0'){
           Yii::$app->session->setFlash('error', "Please verify your email!");
             return $this->redirect(['login']);
             die();
        } else {
            return $this->render('dashboard', [
            'model' => $model,
            ]); 
        }
    
}
   
  public function actionStep2()
  {
         $this->layout = 'InnerPage';
         $id = Yii::$app->user->identity->id;
         Yii::$app->params['uploadPath'] = Yii::$app->basePath . '/web/uploads/';
         $user = new LoginForm();
         $model = UserMast::findOne($id);

         $model->activation_date = date('Y-m-d h:i:s');
         //$model->exp_date = date('Y-m-d h:i:s');
         $model->user_ip = $_SERVER['REMOTE_ADDR'];
        if (Yii::$app->request->post()) {
            $model->load(\Yii::$app->request->post());
          
            $cityModel = new CityMast();
            $cityid = $model->city_code;
            $city_name =  $cityModel->getCityName($cityid);
            $model->city_name = $city_name ;

            $state = new StateMast();
            $state_name =  $state->getStateName($model->state_code);
            $model->state_name = $state_name ;

            $country = new CountryMast();
            $country_name =  $country->getCountryName($model->country_code);
            $model->country_name = $country_name ;            

            //$image = UploadedFile::getInstance($model, 'user_pic');
            //if($image != null){
          
            //$model->user_pic = $image->name;
            //$tmp = explode(".", $image->name);
            //$ext = end($tmp);
            //$ext = end((explode(".", $image->name)));

             //$model->imageFile = $image->name;
            //$path = Yii::$app->params['uploadPath'] . $model->imageFile;
            //code to upload the user image
            //if ($model->imageFile && $model->validate()) {                
               //$image->saveAs($path);
              //}
             //}
             $pan_no = $model->pan_no;
             $model->pan_no = strtoupper($pan_no);
           
              if ($model->save() && $user->SetStatus($id,'2')) {
                $msg = "User profile updated.";
                  Yii::$app->session->setFlash('success', "User profile updated."); 
                 return $this->redirect(['dashboard']);
    
              } else {
                  Yii::$app->session->setFlash('error', "User not saved.");
              }
              //return $this->redirect(['index']);
         }
        return $this->render('step2', [
            'model' => $model,
        ]);
    
 }
 public function actionStep2update()
 {
         $this->layout = 'InnerPage';

         $id = Yii::$app->user->identity->id;
         Yii::$app->params['uploadPath'] = Yii::$app->basePath . '/web/uploads/';
         $user = new LoginForm();
         $model = UserMast::findOne($id);
         //$model->scenario = 'update-photo-upload';
        
        if (Yii::$app->request->post()) {
            $model->load(\Yii::$app->request->post());
           
            $image = UploadedFile::getInstance($model, 'user_pic');
            if($image != null){
          
            $model->user_pic = $image->name;
            $ext = end((explode(".", $image->name)));
             $model->imageFile = $image->name;
            $path = Yii::$app->params['uploadPath'] . $model->imageFile;
            //code to upload the user image
            if ($model->imageFile && $model->validate()) {                
               $image->saveAs($path);
              }
             }
             $pan_no = $model->pan_no;
             $model->pan_no = strtoupper($pan_no);
           
        if($model->load(Yii::$app->request->post()) && $model->save()) {
          Yii::$app->session->setFlash('success', "User profile updated."); 
                 return $this->redirect(['dashboard']);
    
              } else {
                  Yii::$app->session->setFlash('error', "User not saved.");
              }
              //return $this->redirect(['index']);
         }
        return $this->render('step2update', [
            'model' => $model,
        ]);
    
 }
    /**
     * Requests password reset.
     *

     * @return mixed
     */
    public function actionRequestPasswordReset()
    {
        $model = new PasswordResetRequestForm();
        if ($model->load(Yii::$app->request->post()) && $model->validate()) {
            if ($model->sendEmail()) {
                Yii::$app->session->setFlash('success', 'Check your email for further instructions.');
                return $this->goHome();
            } else {
                Yii::$app->session->setFlash('error', 'Sorry, we are unable to reset password for the provided email address.');
            }
        }

        return $this->render('requestPasswordResetToken', [
            'model' => $model,
        ]);
    }
    /**
     * Resets password.
     *

     * @param string $token

     * @return mixed

     * @throws BadRequestHttpException
     */
    public function actionVerify()
    {
        $connection = \Yii::$app->db;
        $email = $_GET['user_email'];
        $user_email = base64_decode($email);
        $model = UserMast::find()->where(['email' => $user_email])->one();
       
        
        $sql = "UPDATE user_mast SET status=1 WHERE id = $model->id";
        $command = $connection->createCommand($sql);
       
        if ($command->execute()==1){
              Yii::$app->session->setFlash('success', "Thanks for email verification"); 
          } else {
                  Yii::$app->session->setFlash('error', "User not saved.");
              }

         return $this->redirect(['login']);


    }

    public function actionResetPassword($token)
    {
        try {
            $model = new ResetPasswordForm($token);
        } catch (InvalidParamException $e) {
            throw new BadRequestHttpException($e->getMessage());
     }
        if ($model->load(Yii::$app->request->post()) && $model->validate() && $model->resetPassword()) {

            Yii::$app->session->setFlash('success', 'New password saved.');
            return $this->goHome();
        }
        return $this->render('resetPassword', [
            'model' => $model,
        ]);
    }

    public function sendMail($user_email="")
    {
        try{
        $textBody = "<html><body><p>Hello ".$user_email. "</p><br><br>
                        Thank you for showing you interested for subscription of courtsjudgments.com<br><br>
                        Please click on the link below to verify your valid email id and continue with the subscription process. <br><a href='".Yii::$app->params['domainName'].'site/verify&user_email='.base64_encode($user_email)."'>".Yii::$app->params['domainName'].'site/verify&user_email='.base64_encode($user_email)."</a>   
                        You can even copy paste the above link in the browser address bar.<br><br>
                        In case of any more issue you can forward this mail to registration@courtsjudgments.com<br><br> 
                        Thank You<br>
                        Sales Support<br>
                        courtsjudgments.com<br></body></html>";
     Yii::$app->mailer->compose()
    ->setFrom('admin@laxyo.org')
    ->setTo($user_email)
    ->setSubject('Email verification from courtjudgement')
    ->setHtmlBody($textBody)
    ->send();
} catch(\Swift_TransportException $exception){
     return 'Can sent mail due to the following exception'.print_r($exception);

}
   
    }

    public function actionUpdate()
    {
        $id = $_POST['userid'];
        $model =   UserMast::find()->where(['userid'=>$id])->one(); 
        //$this->findModel($id);
        $actual_image = $model->user_pic;
        if ($model->load(Yii::$app->request->post())) {
             try{
               $path = Yii::getAlias('@frontend') .'/web/images/profileimage/';
               $path1 = Yii::getAlias('@frontend') .'/web/images/profileimage';
               if(chmod($path1, 0545)) { chmod($path1, 0745); }  
                $user_pic = UploadedFile::getInstance($model, 'user_pic');
                if(isset($user_pic))
                {
                   $model->user_pic = date('dmyhis').str_replace(" ", "-",$user_pic->name);
          

                  $user_pic->saveAs($path.date('dmyhis').str_replace(" ", "-",$user_pic->name)); 
                }  
                else{
                      $model->user_pic = $actual_image;
                      }                
                 if($model->save(false)){
                    chmod($path1, 0545);                    
                   Yii::$app->getSession()->setFlash('success','Data saved!');  
                   return $this->redirect(['index']);
               } else {
                    chmod($path1, 0545);                
                   Yii::$app->getSession()->setFlash('error','Data not saved!');
                   return $this->render('index');
               }
              }catch(Exception $e){
                  Yii::$app->getSession()->setFlash('error',"{$e->getMessage()}");
              }
            }
         else {
            return $this->render('index');
        }
    }    
    public function actionChangePassword()
    {

    $this->layout = 'InnerPage';
    $id = \Yii::$app->user->id;

    try {
        $model = new ChangePasswordForm($id);
      
    } catch (InvalidParamException $e) {
        throw new BadRequestHttpException($e->getMessage());
    }
 
    if ($model->load(\Yii::$app->request->post()) && $model->validate() && $model->changePassword()) {
       Yii::$app->session->setFlash('success', 'Password Changed!');
    } 
        return $this->render('changePassword', [
            'model' => $model,
        ]);
    
}
}

